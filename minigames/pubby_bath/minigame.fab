macro("minigame", "pubby_bath")
: +fork_scope   // This modifier is required!

vars /_minigame
    U _water_level = 0

struct _Particle
    UF x
    UF y
    SF yspeed
    U tile
    U attr

macro("pool_contiguous", "_Particle", "32", "_particles", "/_minigame")
: +fork_scope

data /palettes
    [25] _initial_palette
        file(raw, "tub.pal")
        : +palette_25

data /donut
    [] _bg_chr
        file(donut, "tub.chr")

data /rlz
    [] _nt
        file(rlz, "tub.nam", false)

fn _setup() PPP/strings
    // Upload the CHR:
    ppu_reset_addr($0000)
    ppu_upload_donut(@_bg_chr, _bg_chr.chunks)

    // Upload the NT:
    ppu_reset_addr($2000)
    ppu_upload_rlz(@_nt)

    return @"Fill!"

fn _nmi()
    // Update the registers before returning:
    ppu_set_scroll(0, 0)
    {PPUCTRL}(PPUCTRL_NMI_ON | _stage)
    {PPUMASK}(PPUMASK_ON | PPUMASK_NO_CLIP)

    // Handle sprite 0:

fn _prepare_sprites()
    U o = 0

    // Add the particle sprites:
    for U i = 0; i < _particles_num; i += 1
        if _particles[i].x.b == 0 && _particles[i].y.b == 0
            o = push_oam(o, U(_particles[i].x), U(_particles[i].y), _particles[i].tile, _particles[i].attr)

    hide_oam(o)

fn _loop()
    // Update particles
    for U i = 0; i < _particles_num;
        _particles[i].life -= 1
        if _particles[i].life == 0
            _particles_delete(i)
        else
            _particles[i].x += _particles[i].xspeed
            _particles[i].y += _particles[i].yspeed
            _particles[i].yspeed += 0.1
            i += 1

    if beat_minigame
    else
        // Handle input
        if pads[0].pressed & BUTTON_A
            for U i = 0; i < 20; i += 1
                _spawn_particle(_stage)
            _stage += 1
            if _stage == 3
                beat_minigame = true


fn _spawn_particle(U stage)
    _Particle p
    p.x = 128 - 32 + randb(65) - 4
    p.y = 120 - 64 + randb(129) - 24
    p.xspeed = SF(rand()) >> 6
    p.yspeed = (SF(rand()) >> 6) - 2.0
    p.tile = $FD + randb(3)
    p.attr = stage | (rand() & %11100000)
    p.life = 120
    _particles_new(p)
